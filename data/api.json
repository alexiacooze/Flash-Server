[
    {
        "id": 1,
          "questions": "What does API stand for?",
          "answer": "create-react-app <file name>",
          "flipped": false
        },
        {
        "id": 2,
          "questions": "What is the purpose of an API?",
          "answer": "NPM installs dependency packages sequentially, Yarn installs in-parallel. Yarn allows for faster installation of larger files",
          "flipped": false
        },
        {
        "id": 3,
          "questions": "How do you call an API in react?",
          "answer": "Both Npm and Npx are tools. Npm is used install packages. Npx is used to execute packages.",
          "flipped": false
        },
        {
        "id": 4,
          "questions": "What is a REST or RESTFUL API?",
          "answer": "MERN, MongoDB, Express, React, and Node. HTML, and CSS are used for the client-side UI.",
          "flipped": false
        },
        {
        "id": 5,
          "questions": "What is the difference between fetch vs. axios?",
          "answer": "Javascript",
          "flipped": false
        },
        {
        "id": 6,
          "questions": "What is an API key?",
          "answer": "{} are used when using JSX, and () are used when invoking",
          "flipped": false
        },
        {
        "id": 7,
          "questions": "What is an HTTP request?",
          "answer": "A front-end Javascript library",
          "flipped": false
        },
        {
        "id": 8,
          "questions": "What are the 4 types of HTTP requests?",
          "answer": "GET, POST, DELETE, and PATCH.",
          "flipped": false
        },
        {
        "id": 9,
          "questions": "What is the use for GET",
          "answer": "It is used to request data from an endpoint.",
          "flipped": false
        },
        {
        "id": 10,
          "questions": "What is the use for POST?",
          "answer": "It is used to send data to an endpoint.",
          "flipped": false
        },
        {
        "id": 11,
          "questions": "What is the use for PATCH",
          "answer": "It is used to update a record or data value within an endpoint.",
          "flipped": false
        },
        {
        "id": 12,
          "questions": "What is the use for DELETE?",
          "answer": "It is used to remove data from an endpoint.",
          "flipped": false
        },
        {
        "id": 13,
          "questions": "What are API endpoints?",
          "answer": "It is primarily used when using state without hooks.",
          "flipped": false
        },
        {
        "id": 14,
          "questions": "What is the difference betweeen componentDidMount and useEffect?",
          "answer": "Import allows access to dependencies, and other information within different components.",
          "flipped": false
        },
        {
        "id": 15,
          "questions": "What are lifecycle methods??",
          "answer": "Third party code, libraries, or programs that are required for your code to run. I.e., installing SCSS insted of using CSS",
          "flipped": false
        },
        {
        "id": 16,
          "questions": "What are the 3 phases of lifecycle methods?",
          "answer": "Npm i <dependency>, within the terminal i.e., npm i scss",
          "flipped": false
        },
        {
        "id": 17,
          "questions": "What is the mounting phase used for?",
          "answer": "They can be found within both package-lock.json, and package.json.",
          "flipped": false
        },
        {
        "id": 18,
          "questions": "What is the updating phase used for?",
          "answer": "The node-modules hold external packages, and dependencies that are essential for running an effecitve React app.",
          "flipped": false
        },
        {
        "id": 19,
          "questions": "What is the unmounting phase used for?",
          "answer": "A framework",
          "flipped": false
        },
        {
        "id": 20,
          "questions": "What are promises?",
          "answer": "A file that stores data within objects.",
          "flipped": false
        },
        {
        "id": 21,
          "questions": "What is the use of async and await?",
          "answer": "True",
          "flipped": false
        },
        {
        "id": 22,
          "questions": "What is a .then used for?",
          "answer": "It is used to explain the decision making, steps, processes and intstallation steps of a project.",
          "flipped": false
        },
        {
        "id": 23,
          "questions": "What is a .catch used for?",
          "answer": "Package-lock.json describes the exact tree generated, and allows subsequent package installations to use the most current version. Package.json includes general information about the project and it dependencies.",
          "flipped": false
        },
        {
        "id": 24,
          "questions": "True of False: is it best practice to always include a .catch?",
          "answer": "To remove any files, folders, modules etc. from the general visibility of the code. Anything included within the .gitignore will not be shown within git repositories.",
          "flipped": false
        },
        {
        "id": 25,
          "questions": "How do you get promise results in React?",
          "answer": "Promise values can be accessed by using await.",
          "flipped": false
        },
        {
        "id": 26,
          "questions": "True or False: promises are asynchronus?",
          "answer": "True.",
          "flipped": false
        },
        {
        "id": 27,
          "questions": "What is a callback function?",
          "answer": "It is placed after.",
          "flipped": false
        },
        {
        "id": 28,
          "questions": "What is the difference between a callback and a promise?",
          "answer": "A promise is an object which is used to handle the asynchronous result of an operation. The promise constructor takes one argument, a callback function with two parameters, resolve and reject.",
          "flipped": false
        },
        {
        "id": 29,
          "questions": "What is the benefit of using an asynchronus function?",
          "answer": "It allows for different types of code to run synonomously, which increases output speed.",
          "flipped": false
        },
        {
        "id": 30,
          "questions": "True or False: an you pass a callback into a function?",
          "answer": "True",
          "flipped": false
        }
    ]